{"ast":null,"code":"var _jsxFileName = \"/Users/nhwm1/Desktop/TRIO/src/components/GameBoard.tsx\";\nimport React from 'react';\nimport './GameBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = ({\n  board,\n  selectedCards,\n  onCardClick\n}) => {\n  // 3x3 보드에 필요한 9개 카드만 사용\n  const boardCards = board.slice(0, 9);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: boardCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${selectedCards.some(c => c.id === card.id) ? 'selected' : ''}`,\n      onClick: () => onCardClick(card),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: card.imagePath,\n        alt: `${card.race} ${card.job} (${card.alignment})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-race\",\n          children: getRaceText(card.race)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-job\",\n          children: getJobText(card.job)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card-alignment ${card.alignment}`,\n          children: getAlignmentText(card.alignment)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n// 종족 한글 변환\n_c = GameBoard;\nconst getRaceText = race => {\n  const raceMap = {\n    'human': '인간',\n    'elf': '엘프',\n    'dwarf': '드워프'\n  };\n  return raceMap[race];\n};\n\n// 직업 한글 변환\nconst getJobText = job => {\n  const jobMap = {\n    'warrior': '전사',\n    'mage': '마법사',\n    'archer': '궁수'\n  };\n  return jobMap[job];\n};\n\n// 성향 한글 변환\nconst getAlignmentText = alignment => {\n  const alignmentMap = {\n    'cold': '냉철',\n    'order': '정렬',\n    'chaos': '혼돈'\n  };\n  return alignmentMap[alignment];\n};\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GameBoard","board","selectedCards","onCardClick","boardCards","slice","className","children","map","card","some","c","id","onClick","src","imagePath","alt","race","job","alignment","fileName","_jsxFileName","lineNumber","columnNumber","getRaceText","getJobText","getAlignmentText","_c","raceMap","jobMap","alignmentMap","$RefreshReg$"],"sources":["/Users/nhwm1/Desktop/TRIO/src/components/GameBoard.tsx"],"sourcesContent":["import React from 'react';\nimport { Card } from '../types/types';\nimport './GameBoard.css';\n\ninterface GameBoardProps {\n  board: Card[];\n  selectedCards: Card[];\n  onCardClick: (card: Card) => void;\n}\n\nconst GameBoard: React.FC<GameBoardProps> = ({ board, selectedCards, onCardClick }) => {\n  // 3x3 보드에 필요한 9개 카드만 사용\n  const boardCards = board.slice(0, 9);\n  \n  return (\n    <div className=\"game-board\">\n      {boardCards.map((card) => (\n        <div \n          key={card.id} \n          className={`card ${selectedCards.some(c => c.id === card.id) ? 'selected' : ''}`}\n          onClick={() => onCardClick(card)}\n        >\n          <img \n            src={card.imagePath} \n            alt={`${card.race} ${card.job} (${card.alignment})`} \n          />\n          <div className=\"card-info\">\n            <div className=\"card-race\">{getRaceText(card.race)}</div>\n            <div className=\"card-job\">{getJobText(card.job)}</div>\n            <div className={`card-alignment ${card.alignment}`}>\n              {getAlignmentText(card.alignment)}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// 종족 한글 변환\nconst getRaceText = (race: Card['race']): string => {\n  const raceMap: Record<Card['race'], string> = {\n    'human': '인간',\n    'elf': '엘프',\n    'dwarf': '드워프'\n  };\n  return raceMap[race];\n};\n\n// 직업 한글 변환\nconst getJobText = (job: Card['job']): string => {\n  const jobMap: Record<Card['job'], string> = {\n    'warrior': '전사',\n    'mage': '마법사',\n    'archer': '궁수'\n  };\n  return jobMap[job];\n};\n\n// 성향 한글 변환\nconst getAlignmentText = (alignment: Card['alignment']): string => {\n  const alignmentMap: Record<Card['alignment'], string> = {\n    'cold': '냉철',\n    'order': '정렬',\n    'chaos': '혼돈'\n  };\n  return alignmentMap[alignment];\n};\n\nexport default GameBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}