{"ast":null,"code":"var _jsxFileName = \"/Users/nhwm1/Desktop/TRIO/src/components/Toast.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './Toast.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toast = ({\n  toast,\n  setToast\n}) => {\n  _s();\n  useEffect(() => {\n    // 토스트 메시지가 보이면 3초 후에 자동으로 사라지게 함\n    if (toast.isVisible) {\n      const timer = setTimeout(() => {\n        setToast({\n          ...toast,\n          isVisible: false\n        });\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [toast, setToast]);\n  if (!toast.isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toast ${toast.type}`,\n    children: toast.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Toast, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Toast;\nexport default Toast;\nvar _c;\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Toast","toast","setToast","_s","isVisible","timer","setTimeout","clearTimeout","className","type","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nhwm1/Desktop/TRIO/src/components/Toast.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './Toast.css';\nimport { ToastMessage } from '../types/types';\n\ninterface ToastProps {\n  toast: ToastMessage;\n  setToast: React.Dispatch<React.SetStateAction<ToastMessage>>;\n}\n\nconst Toast: React.FC<ToastProps> = ({ toast, setToast }) => {\n  useEffect(() => {\n    // 토스트 메시지가 보이면 3초 후에 자동으로 사라지게 함\n    if (toast.isVisible) {\n      const timer = setTimeout(() => {\n        setToast({ ...toast, isVisible: false });\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [toast, setToast]);\n\n  if (!toast.isVisible) return null;\n\n  return (\n    <div className={`toast ${toast.type}`}>\n      {toast.message}\n    </div>\n  );\n};\n\nexport default Toast; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQrB,MAAMC,KAA2B,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3DN,SAAS,CAAC,MAAM;IACd;IACA,IAAII,KAAK,CAACG,SAAS,EAAE;MACnB,MAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BJ,QAAQ,CAAC;UAAE,GAAGD,KAAK;UAAEG,SAAS,EAAE;QAAM,CAAC,CAAC;MAC1C,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACJ,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAErB,IAAI,CAACD,KAAK,CAACG,SAAS,EAAE,OAAO,IAAI;EAEjC,oBACEL,OAAA;IAAKS,SAAS,EAAE,SAASP,KAAK,CAACQ,IAAI,EAAG;IAAAC,QAAA,EACnCT,KAAK,CAACU;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACZ,EAAA,CAlBIH,KAA2B;AAAAgB,EAAA,GAA3BhB,KAA2B;AAoBjC,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}