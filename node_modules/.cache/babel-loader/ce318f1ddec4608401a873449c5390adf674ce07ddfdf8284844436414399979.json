{"ast":null,"code":"var _jsxFileName = \"/Users/nhwm1/Desktop/TRIO/src/components/GameBoard.tsx\";\nimport React from 'react';\nimport './GameBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = ({\n  board,\n  selectedCards,\n  onCardClick\n}) => {\n  // 3x3 보드에 필요한 9개 카드만 사용\n  const boardCards = board.slice(0, 9);\n\n  // 종족, 직업, 성향 한글 변환 함수\n  const getRaceText = race => {\n    const raceMap = {\n      'human': '인간',\n      'elf': '엘프',\n      'dwarf': '드워프'\n    };\n    return raceMap[race];\n  };\n  const getJobText = job => {\n    const jobMap = {\n      'warrior': '전사',\n      'mage': '마법사',\n      'archer': '궁수'\n    };\n    return jobMap[job];\n  };\n  const getAlignmentText = alignment => {\n    const alignmentMap = {\n      'cold': '냉철',\n      'order': '정렬',\n      'chaos': '혼돈'\n    };\n    return alignmentMap[alignment];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: boardCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${selectedCards.some(c => c.id === card.id) ? 'selected' : ''}`,\n      onClick: () => onCardClick(card),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: card.imagePath,\n        alt: `${card.race} ${card.job} (${card.alignment})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-summary\",\n          children: `${getRaceText(card.race)} ${getJobText(card.job)} (${getAlignmentText(card.alignment)})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GameBoard","board","selectedCards","onCardClick","boardCards","slice","getRaceText","race","raceMap","getJobText","job","jobMap","getAlignmentText","alignment","alignmentMap","className","children","map","card","some","c","id","onClick","src","imagePath","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nhwm1/Desktop/TRIO/src/components/GameBoard.tsx"],"sourcesContent":["import React from 'react';\nimport { Card } from '../types/types';\nimport './GameBoard.css';\n\ninterface GameBoardProps {\n  board: Card[];\n  selectedCards: Card[];\n  onCardClick: (card: Card) => void;\n}\n\nconst GameBoard: React.FC<GameBoardProps> = ({ board, selectedCards, onCardClick }) => {\n  // 3x3 보드에 필요한 9개 카드만 사용\n  const boardCards = board.slice(0, 9);\n  \n  // 종족, 직업, 성향 한글 변환 함수\n  const getRaceText = (race: Card['race']): string => {\n    const raceMap: Record<Card['race'], string> = {\n      'human': '인간',\n      'elf': '엘프',\n      'dwarf': '드워프'\n    };\n    return raceMap[race];\n  };\n\n  const getJobText = (job: Card['job']): string => {\n    const jobMap: Record<Card['job'], string> = {\n      'warrior': '전사',\n      'mage': '마법사',\n      'archer': '궁수'\n    };\n    return jobMap[job];\n  };\n\n  const getAlignmentText = (alignment: Card['alignment']): string => {\n    const alignmentMap: Record<Card['alignment'], string> = {\n      'cold': '냉철',\n      'order': '정렬',\n      'chaos': '혼돈'\n    };\n    return alignmentMap[alignment];\n  };\n  \n  return (\n    <div className=\"game-board\">\n      {boardCards.map((card) => (\n        <div \n          key={card.id} \n          className={`card ${selectedCards.some(c => c.id === card.id) ? 'selected' : ''}`}\n          onClick={() => onCardClick(card)}\n        >\n          <img \n            src={card.imagePath} \n            alt={`${card.race} ${card.job} (${card.alignment})`} \n          />\n          <div className=\"card-info\">\n            <div className=\"card-summary\">\n              {`${getRaceText(card.race)} ${getJobText(card.job)} (${getAlignmentText(card.alignment)})`}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default GameBoard; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzB,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,aAAa;EAAEC;AAAY,CAAC,KAAK;EACrF;EACA,MAAMC,UAAU,GAAGH,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;;EAEpC;EACA,MAAMC,WAAW,GAAIC,IAAkB,IAAa;IAClD,MAAMC,OAAqC,GAAG;MAC5C,OAAO,EAAE,IAAI;MACb,KAAK,EAAE,IAAI;MACX,OAAO,EAAE;IACX,CAAC;IACD,OAAOA,OAAO,CAACD,IAAI,CAAC;EACtB,CAAC;EAED,MAAME,UAAU,GAAIC,GAAgB,IAAa;IAC/C,MAAMC,MAAmC,GAAG;MAC1C,SAAS,EAAE,IAAI;MACf,MAAM,EAAE,KAAK;MACb,QAAQ,EAAE;IACZ,CAAC;IACD,OAAOA,MAAM,CAACD,GAAG,CAAC;EACpB,CAAC;EAED,MAAME,gBAAgB,GAAIC,SAA4B,IAAa;IACjE,MAAMC,YAA+C,GAAG;MACtD,MAAM,EAAE,IAAI;MACZ,OAAO,EAAE,IAAI;MACb,OAAO,EAAE;IACX,CAAC;IACD,OAAOA,YAAY,CAACD,SAAS,CAAC;EAChC,CAAC;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBZ,UAAU,CAACa,GAAG,CAAEC,IAAI,iBACnBnB,OAAA;MAEEgB,SAAS,EAAE,QAAQb,aAAa,CAACiB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;MACjFC,OAAO,EAAEA,CAAA,KAAMnB,WAAW,CAACe,IAAI,CAAE;MAAAF,QAAA,gBAEjCjB,OAAA;QACEwB,GAAG,EAAEL,IAAI,CAACM,SAAU;QACpBC,GAAG,EAAE,GAAGP,IAAI,CAACX,IAAI,IAAIW,IAAI,CAACR,GAAG,KAAKQ,IAAI,CAACL,SAAS;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACF9B,OAAA;QAAKgB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBjB,OAAA;UAAKgB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC1B,GAAGV,WAAW,CAACY,IAAI,CAACX,IAAI,CAAC,IAAIE,UAAU,CAACS,IAAI,CAACR,GAAG,CAAC,KAAKE,gBAAgB,CAACM,IAAI,CAACL,SAAS,CAAC;QAAG;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,GAZDX,IAAI,CAACG,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaT,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GArDI9B,SAAmC;AAuDzC,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}