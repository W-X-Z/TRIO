{"ast":null,"code":"var _jsxFileName = \"/Users/nhwm1/Desktop/TRIO/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport GameBoard from './components/GameBoard';\nimport CardSelection from './components/CardSelection';\nimport { initializeBoard, compareAttributes } from './utils/gameLogic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [validationResult, setValidationResult] = useState(null);\n  useEffect(() => {\n    // 보드 초기화\n    setBoard(initializeBoard());\n  }, []);\n  const handleCardSelect = card => {\n    if (selectedCards.some(c => c.id === card.id)) {\n      // 이미 선택된 카드면 선택 취소\n      setSelectedCards(selectedCards.filter(c => c.id !== card.id));\n    } else if (selectedCards.length < 3) {\n      // 3장 미만이면 선택\n      setSelectedCards([...selectedCards, card]);\n    }\n  };\n  const checkCards = () => {\n    if (selectedCards.length === 3) {\n      const result = compareAttributes(selectedCards);\n      setValidationResult(result);\n    }\n  };\n  const resetSelection = () => {\n    setSelectedCards([]);\n    setValidationResult(null);\n  };\n  const resetGame = () => {\n    setBoard(initializeBoard());\n    resetSelection();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCE74\\uB4DC \\uC18D\\uC131 \\uAC8C\\uC784\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(GameBoard, {\n        board: board,\n        selectedCards: selectedCards,\n        onCardClick: handleCardSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-controls\",\n        children: [/*#__PURE__*/_jsxDEV(CardSelection, {\n          selectedCards: selectedCards,\n          onCardClick: handleCardSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: checkCards,\n            disabled: selectedCards.length !== 3,\n            children: \"\\uC870\\uD569 \\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetSelection,\n            children: \"\\uC120\\uD0DD \\uCD08\\uAE30\\uD654\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetGame,\n            children: \"\\uAC8C\\uC784 \\uC7AC\\uC2DC\\uC791\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), validationResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `validation-result ${validationResult.isValid ? 'valid' : 'invalid'}`,\n          children: validationResult.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0ntW9R7fjWgND8HlnisTWptbPBY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GameBoard","CardSelection","initializeBoard","compareAttributes","jsxDEV","_jsxDEV","App","_s","board","setBoard","selectedCards","setSelectedCards","validationResult","setValidationResult","handleCardSelect","card","some","c","id","filter","length","checkCards","result","resetSelection","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCardClick","onClick","disabled","isValid","message","_c","$RefreshReg$"],"sources":["/Users/nhwm1/Desktop/TRIO/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport GameBoard from './components/GameBoard';\nimport CardSelection from './components/CardSelection';\nimport { initializeBoard, compareAttributes } from './utils/gameLogic';\nimport { Card, ValidationResult } from './types/types';\n\nfunction App() {\n  const [board, setBoard] = useState<Card[]>([]);\n  const [selectedCards, setSelectedCards] = useState<Card[]>([]);\n  const [validationResult, setValidationResult] = useState<ValidationResult | null>(null);\n\n  useEffect(() => {\n    // 보드 초기화\n    setBoard(initializeBoard());\n  }, []);\n\n  const handleCardSelect = (card: Card) => {\n    if (selectedCards.some(c => c.id === card.id)) {\n      // 이미 선택된 카드면 선택 취소\n      setSelectedCards(selectedCards.filter(c => c.id !== card.id));\n    } else if (selectedCards.length < 3) {\n      // 3장 미만이면 선택\n      setSelectedCards([...selectedCards, card]);\n    }\n  };\n\n  const checkCards = () => {\n    if (selectedCards.length === 3) {\n      const result = compareAttributes(selectedCards);\n      setValidationResult(result);\n    }\n  };\n\n  const resetSelection = () => {\n    setSelectedCards([]);\n    setValidationResult(null);\n  };\n\n  const resetGame = () => {\n    setBoard(initializeBoard());\n    resetSelection();\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>카드 속성 게임</h1>\n      <div className=\"game-container\">\n        <GameBoard \n          board={board} \n          selectedCards={selectedCards} \n          onCardClick={handleCardSelect} \n        />\n        <div className=\"game-controls\">\n          <CardSelection \n            selectedCards={selectedCards} \n            onCardClick={handleCardSelect}\n          />\n          <div className=\"game-buttons\">\n            <button onClick={checkCards} disabled={selectedCards.length !== 3}>\n              조합 확인\n            </button>\n            <button onClick={resetSelection}>선택 초기화</button>\n            <button onClick={resetGame}>게임 재시작</button>\n          </div>\n          {validationResult && (\n            <div className={`validation-result ${validationResult.isValid ? 'valid' : 'invalid'}`}>\n              {validationResult.message}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAC9D,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAA0B,IAAI,CAAC;EAEvFC,SAAS,CAAC,MAAM;IACd;IACAU,QAAQ,CAACP,eAAe,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,gBAAgB,GAAIC,IAAU,IAAK;IACvC,IAAIL,aAAa,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,EAAE;MAC7C;MACAP,gBAAgB,CAACD,aAAa,CAACS,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,CAAC;IAC/D,CAAC,MAAM,IAAIR,aAAa,CAACU,MAAM,GAAG,CAAC,EAAE;MACnC;MACAT,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEK,IAAI,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIX,aAAa,CAACU,MAAM,KAAK,CAAC,EAAE;MAC9B,MAAME,MAAM,GAAGnB,iBAAiB,CAACO,aAAa,CAAC;MAC/CG,mBAAmB,CAACS,MAAM,CAAC;IAC7B;EACF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BZ,gBAAgB,CAAC,EAAE,CAAC;IACpBE,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtBf,QAAQ,CAACP,eAAe,CAAC,CAAC,CAAC;IAC3BqB,cAAc,CAAC,CAAC;EAClB,CAAC;EAED,oBACElB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA;MAAKoB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BrB,OAAA,CAACL,SAAS;QACRQ,KAAK,EAAEA,KAAM;QACbE,aAAa,EAAEA,aAAc;QAC7BqB,WAAW,EAAEjB;MAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFzB,OAAA;QAAKoB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BrB,OAAA,CAACJ,aAAa;UACZS,aAAa,EAAEA,aAAc;UAC7BqB,WAAW,EAAEjB;QAAiB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eACFzB,OAAA;UAAKoB,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BrB,OAAA;YAAQ2B,OAAO,EAAEX,UAAW;YAACY,QAAQ,EAAEvB,aAAa,CAACU,MAAM,KAAK,CAAE;YAAAM,QAAA,EAAC;UAEnE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTzB,OAAA;YAAQ2B,OAAO,EAAET,cAAe;YAAAG,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChDzB,OAAA;YAAQ2B,OAAO,EAAER,SAAU;YAAAE,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,EACLlB,gBAAgB,iBACfP,OAAA;UAAKoB,SAAS,EAAE,qBAAqBb,gBAAgB,CAACsB,OAAO,GAAG,OAAO,GAAG,SAAS,EAAG;UAAAR,QAAA,EACnFd,gBAAgB,CAACuB;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CAnEQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}